class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        char digits[] = {'1','2','3','4','5','6','7','8','9'};
        
        for(int i = 0 ; i < board.size() ; i++){
            // For Row Checking
            for(int x = 0 ; x < board.size() ; x++){
                int find = 0;
                for(int j = 0 ; j < board.size() ; j++){
                    if(board[i][j]==digits[x]){
                        find++;
                    }
                }
                if(find > 1){
                    return false;
                }
            }
            
            // For Column Checking
            for(int x = 0 ; x < board.size() ; x++){
                int find = 0;
                for(int k = 0 ; k < board.size() ; k++){
                    if(board[k][i]==digits[x]){
                        find++;
                    }
                }
                if(find > 1){
                    return false;
                }
            }
        }
        
        // For 3x3 Checking
        int row = board.size()/3;
        int size_sub = board.size()/3;
        for(int i = 0 ; i < size_sub ; i++){
            int column = 3;
            for(int j = 0 ; j < size_sub ; j++){
                for(int k = (row-3) ; k < row ; k++){
                    for(int z = (column-3) ; z < column ; z++){
                        cout << board[k][z] << " ";    
                    }
                    cout << endl;
                }
                column += 3; 
                cout << endl;
            }
            row += 3; 
        }
        
        
        return true;
        
        
    }
};